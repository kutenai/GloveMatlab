<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
                "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<head>
  <title>Index for Directory .</title>
  <meta name="keywords" content=".">
  <meta name="description" content="Index for Directory .">
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <meta name="generator" content="m2html &copy; 2003 Guillaume Flandin">
  <meta name="robots" content="index, follow">
  <link type="text/css" rel="stylesheet" href="./m2html.css">
</head>
<body>
<a name="_top"></a>
<table width="100%"><tr><td align="left"><a href="./index.html"><img alt="<" border="0" src="./left.png">&nbsp;Master index</a></td>
<td align="right"><a href="index.html">Index for .&nbsp;<img alt=">" border="0" src="./right.png"></a></td></tr></table>

<h1>Index for .</h1>

<h2>Matlab files in this directory:</h2>
<table>
<tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="Contents.html">Contents</a></td><td>Robotics Toolbox. </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="Fanuc10L.html">Fanuc10L</a></td><td>FANUC10L  Load kinematic data for a Fanuc AM120iB/10L robot </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="MotomanHP6.html">MotomanHP6</a></td><td>MotomanHP6  Load kinematic data for a Motoman HP6 manipulator </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="S4ABB2p8.html">S4ABB2p8</a></td><td>S4ABB2p8  Load kinematic data for an ABB S4 2.8robot </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="accel.html">accel</a></td><td>ACCEL Compute manipulator forward dynamics </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="angvec2r.html">angvec2r</a></td><td>ANGVEC2R Convert angle and vector orientation to a 3x3 rotation matrix </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="angvec2tr.html">angvec2tr</a></td><td>ANGVEC2TR Convert angle and vector orientation to a 4x4 homogeneous matrix </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="cinertia.html">cinertia</a></td><td>CINERTIA Compute the Cartesian (operational space) manipulator inertia matrix </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="coriolis.html">coriolis</a></td><td>CORIOLIS Compute the manipulator Coriolis matrix </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="ctraj.html">ctraj</a></td><td>CTRAJ Compute a Cartesian trajectory between two points </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="diff2tr.html">diff2tr</a></td><td>DIFF2TR Convert a differential to a homogeneous transform </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="drivebot.html">drivebot</a></td><td>DRIVEBOT Drive a graphical robot </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="eul2r.html">eul2r</a></td><td>EUL2R Convert Euler angles to homogeneous transformation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="eul2tr.html">eul2tr</a></td><td>EUL2TR Convert Euler angles to homogeneous transformation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="fdyn.html">fdyn</a></td><td>FDYN Integrate forward dynamics </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="fdyn2.html">fdyn2</a></td><td>FDYN2  private function called by FDYN </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="fkine.html">fkine</a></td><td>FKINE  Forward robot kinematics for serial link manipulator </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="ftrans.html">ftrans</a></td><td>FTRANS Transform force/moment </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="gravload.html">gravload</a></td><td>GRAVLOAD Compute the gravity loading on manipulator joints </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="ikine.html">ikine</a></td><td>IKINE Inverse manipulator kinematics </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="ikine560.html">ikine560</a></td><td>IKINE560 Inverse kinematics for Puma 560 </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="inertia.html">inertia</a></td><td>INERTIA Compute the manipulator inertia matrix </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="ishomog.html">ishomog</a></td><td>ISHOMOG Test if argument is a homogeneous transformation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="isrot.html">isrot</a></td><td>ISHOMOG Test if argument is a homogeneous transformation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="isvec.html">isvec</a></td><td>ISVEC Test if argument is a homogeneous transformation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="itorque.html">itorque</a></td><td>ITORQUE Compute the manipulator inertia torque </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="jacob0.html">jacob0</a></td><td>JACOB0 Compute manipulator Jacobian in world coordinates </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="jacobn.html">jacobn</a></td><td>JACOBN Compute manipulator Jacobian in end-effector frame </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="jtraj.html">jtraj</a></td><td>JTRAJ Compute a joint space trajectory between two points </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="maniplty.html">maniplty</a></td><td>MANIPLTY Manipulability measure </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="numcols.html">numcols</a></td><td>NUMCOLS(m) </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="numrows.html">numrows</a></td><td>NUMROWS(m) </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="oa2r.html">oa2r</a></td><td>OA2R Convert O/A vectors to rotation matrix </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="oa2tr.html">oa2tr</a></td><td>OA2TR Convert O/A vectors to homogeneous transformation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="plotbotopt.html">plotbotopt</a></td><td>PLOTBOTOPT Define options for robot plotting </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="puma560.html">puma560</a></td><td>PUMA560 Load kinematic and dynamic data for a Puma 560 manipulator </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="puma560akb.html">puma560akb</a></td><td>PUMA560AKB Load kinematic and dynamic data for a Puma 560 manipulator </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="r2t.html">r2t</a></td><td>R2T Return a homogeneous transformation from a rotation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="rne.html">rne</a></td><td>RNE	Compute inverse dynamics via recursive Newton-Euler formulation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="rotx.html">rotx</a></td><td>ROTX Rotation about X axis </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="roty.html">roty</a></td><td>ROTY Rotation about Y axis </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="rotz.html">rotz</a></td><td>ROTZ Rotation about Z axis </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="rpy2r.html">rpy2r</a></td><td>RPY2R Roll/pitch/yaw to rotation matrix </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="rpy2tr.html">rpy2tr</a></td><td>RPY2TR Roll/pitch/yaw to homogenous transform </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="rtdemo.html">rtdemo</a></td><td>RTDEMO 	Robot toolbox demonstrations </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="stanford.html">stanford</a></td><td>STANFORD Load kinematic and dynamic data for Stanford arm </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="startup.html">startup</a></td><td> </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="t2r.html">t2r</a></td><td>TR2ROT Return rotational submatrix of a homogeneous transformation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="tr2angvec.html">tr2angvec</a></td><td>TR2ANGVEC Convert to angle/vector form </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="tr2diff.html">tr2diff</a></td><td>TR2DIFF Convert a transform difference to differential representation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="tr2eul.html">tr2eul</a></td><td>TR2EUL Convert a homogeneous transform matrix to Euler angle form </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="tr2jac.html">tr2jac</a></td><td>TR2JAC Compute a Jacobian to map differentials between frames </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="tr2rpy.html">tr2rpy</a></td><td>TR2RPY Convert a homogeneous transform matrix to roll/pitch/yaw angles </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="transl.html">transl</a></td><td>TRANSL Create translational transform </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="trinterp.html">trinterp</a></td><td>TRINTERP Interpolate homogeneous transformations </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="trnorm.html">trnorm</a></td><td>TRNORM Normalize a homogeneous transformation. </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="trotvec.html">trotvec</a></td><td>TROTVEC Rotation about arbitrary axis </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="trotx.html">trotx</a></td><td>TROTX Rotation about X axis </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="troty.html">troty</a></td><td>TROTY Rotation about Y axis </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="trotz.html">trotz</a></td><td>TROTZ Rotation about Z axis </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="trplot.html">trplot</a></td><td>TRPLOT Plot a transformation </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="twolink.html">twolink</a></td><td>TWOLINK Load kinematic and dynamic data for a simple 2-link mechanism </td></tr><tr><td><img src="./matlabicon.gif" alt="" border="">&nbsp;<a href="unit.html">unit</a></td><td>UNIT Unitize a vector </td></tr></table>


<h2>Subsequent directories:</h2>
<ul style="list-style-image:url(./matlabicon.gif)">
<li><a href="@link/index.html">@link</a></li><li><a href="@quaternion/index.html">@quaternion</a></li><li><a href="@robot/index.html">@robot</a></li><li><a href="demos/index.html">demos</a></li><li>htmldoc</li><li><a href="mex/index.html">mex</a></li><li><a href="simulink/index.html">simulink</a></li></ul>

<hr><address>Generated on Sun 15-Feb-2009 18:09:18 by <strong><a href="http://www.artefact.tk/software/matlab/m2html/">m2html</a></strong> &copy; 2003</address>
</body>
</html>