<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
                "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>
<head>
  <title>Description of fdyn2</title>
  <meta name="keywords" content="fdyn2">
  <meta name="description" content="FDYN2  private function called by FDYN">
  <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
  <meta name="generator" content="m2html &copy; 2003 Guillaume Flandin">
  <meta name="robots" content="index, follow">
  <link type="text/css" rel="stylesheet" href="./m2html.css">
</head>
<body>
<a name="_top"></a>
<div><a href="./index.html">Home</a> &gt;  <a href="index.html">.</a> &gt; fdyn2.m</div>

<!--<table width="100%"><tr><td align="left"><a href="./index.html"><img alt="<" border="0" src="./left.png">&nbsp;Master index</a></td>
<td align="right"><a href="index.html">Index for .&nbsp;<img alt=">" border="0" src="./right.png"></a></td></tr></table>-->

<h1>fdyn2
</h1>

<h2><a name="_name"></a>PURPOSE <a href="#_top"><img alt="^" border="0" src="./up.png"></a></h2>
<div class="box"><strong>FDYN2  private function called by FDYN</strong></div>

<h2><a name="_synopsis"></a>SYNOPSIS <a href="#_top"><img alt="^" border="0" src="./up.png"></a></h2>
<div class="box"><strong>function xd = fdyn2(t, x, flag, robot, torqfun, varargin) </strong></div>

<h2><a name="_description"></a>DESCRIPTION <a href="#_top"><img alt="^" border="0" src="./up.png"></a></h2>
<div class="fragment"><pre class="comment">FDYN2  private function called by FDYN

    XDD = FDYN2(T, X, FLAG, ROBOT, TORQUEFUN)

 Called by FDYN to evaluate the robot velocity and acceleration for
 forward dynamics.  T is the current time, X = [Q QD] is the state vector,
 ROBOT is the object being integrated, and TORQUEFUN is the string name of
 the function to compute joint torques and called as

       TAU = TORQUEFUN(T, X)

 if not given zero joint torques are assumed.

 The result is XDD = [QD QDD].

 See also: <a href="fdyn.html" class="code" title="function [t, q, qd] = fdyn(robot, t0, t1, torqfun, q0, qd0, varargin)">FDYN</a></pre></div>

<!-- crossreference -->
<h2><a name="_cross"></a>CROSS-REFERENCE INFORMATION <a href="#_top"><img alt="^" border="0" src="./up.png"></a></h2>
This function calls:
<ul style="list-style-image:url(./matlabicon.gif)">
<li><a href="accel.html" class="code" title="function qdd = accel(robot, Q, qd, torque)">accel</a>	ACCEL Compute manipulator forward dynamics</li></ul>
This function is called by:
<ul style="list-style-image:url(./matlabicon.gif)">
</ul>
<!-- crossreference -->


<h2><a name="_source"></a>SOURCE CODE <a href="#_top"><img alt="^" border="0" src="./up.png"></a></h2>
<div class="fragment"><pre>0001 <span class="comment">%FDYN2  private function called by FDYN</span>
0002 <span class="comment">%</span>
0003 <span class="comment">%    XDD = FDYN2(T, X, FLAG, ROBOT, TORQUEFUN)</span>
0004 <span class="comment">%</span>
0005 <span class="comment">% Called by FDYN to evaluate the robot velocity and acceleration for</span>
0006 <span class="comment">% forward dynamics.  T is the current time, X = [Q QD] is the state vector,</span>
0007 <span class="comment">% ROBOT is the object being integrated, and TORQUEFUN is the string name of</span>
0008 <span class="comment">% the function to compute joint torques and called as</span>
0009 <span class="comment">%</span>
0010 <span class="comment">%       TAU = TORQUEFUN(T, X)</span>
0011 <span class="comment">%</span>
0012 <span class="comment">% if not given zero joint torques are assumed.</span>
0013 <span class="comment">%</span>
0014 <span class="comment">% The result is XDD = [QD QDD].</span>
0015 <span class="comment">%</span>
0016 <span class="comment">% See also: FDYN</span>
0017 
0018 <span class="comment">% Copyright (C) 1999-2008, by Peter I. Corke</span>
0019 <span class="comment">%</span>
0020 <span class="comment">% This file is part of The Robotics Toolbox for Matlab (RTB).</span>
0021 <span class="comment">%</span>
0022 <span class="comment">% RTB is free software: you can redistribute it and/or modify</span>
0023 <span class="comment">% it under the terms of the GNU Lesser General Public License as published by</span>
0024 <span class="comment">% the Free Software Foundation, either version 3 of the License, or</span>
0025 <span class="comment">% (at your option) any later version.</span>
0026 <span class="comment">%</span>
0027 <span class="comment">% RTB is distributed in the hope that it will be useful,</span>
0028 <span class="comment">% but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
0029 <span class="comment">% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
0030 <span class="comment">% GNU Lesser General Public License for more details.</span>
0031 <span class="comment">%</span>
0032 <span class="comment">% You should have received a copy of the GNU Leser General Public License</span>
0033 <span class="comment">% along with RTB.  If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>
0034 
0035 <a name="_sub0" href="#_subfunctions" class="code">function xd = fdyn2(t, x, flag, robot, torqfun, varargin)</a>
0036 
0037     n = robot.n;
0038 
0039     q = x(1:n);
0040     qd = x(n+1:2*n);
0041 
0042     <span class="comment">% evaluate the torque function if one is given</span>
0043     <span class="keyword">if</span> isstr(torqfun)
0044         tau = feval(torqfun, t, q, qd, varargin{:});
0045     <span class="keyword">else</span>
0046         tau = zeros(n,1);
0047     <span class="keyword">end</span>
0048     
0049     qdd = <a href="accel.html" class="code" title="function qdd = accel(robot, Q, qd, torque)">accel</a>(robot, x(1:n,1), x(n+1:2*n,1), tau);
0050     xd = [x(n+1:2*n,1); qdd];</pre></div>
<hr><address>Generated on Sun 15-Feb-2009 18:09:29 by <strong><a href="http://www.artefact.tk/software/matlab/m2html/">m2html</a></strong> &copy; 2003</address>
</body>
</html>